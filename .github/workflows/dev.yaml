name: Deploy Dev Stage
on:
# event, made changes to dev, expects trigger
  push:
    branches: [ dev ]
  pull_request:
    braches:
      - dev
  # event button
  workflow_dispatch:

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
      - name: hello here1
        run: echo 'Hello World'
        shell: bash
  goodbye:
    runs-on: ubuntu-latest
    steps:
      - name: goodbye world
        run: echo 'goodbye world'
        shell: bash
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      API_KEY: ${{ secrets.NEON_API_KEY }}
      NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
      STAGE: dev
      GH_TOKEN: ${{ github.token }} 
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0 
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.11"
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Install neonctl and tsx
      run: npm install -g neonctl tsx
    - name: Delete Previous Branch
      run: neonctl branches delete dev --api-key ${{ env.API_KEY }}
      continue-on-error: true
    - name: Debug env vars
      run: |
        echo "Project ID: ${{ env.NEON_PROJECT_ID }}"
        echo "API Key length: ${#API_KEY}"
    - name: Create Branched Database 
      run: neonctl branches create --name dev --project-id ${{ env.NEON_PROJECT_ID }} --api-key ${{ env.API_KEY }}
    - name: Branch Connection String in Parameter Store
      run: |
        export DB_URL=$(neonctl connection-string --branch dev --api-key ${{ env.API_KEY }})
        npx tsx src/cli/putSecrets.js dev $DB_URL
    - name: Deploy dev stage
      run: |
        npm run deploy-dev-stage
    - name: Dev Stage Pull Request
      run: |
        export PR_BRANCH=$(git branch --show-current)
        export DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
        echo "$PR_BRANCH and $DEFAULT_BRANCH"
        export DEV_STAGE_INFO=$(npm run info-dev-stage)
        gh pr create --title "Automated PR from Dev Stage" --body "$DEV_STAGE_INFO" --base $DEFAULT_BRANCH --head $PR_BRANCH --repo $GITHUB_REPOSITORY
